import os
import aiohttp
import uuid
from datetime import datetime
from openpyxl import Workbook
from openpyxl.styles import Font, PatternFill
from aiogram.types import FSInputFile, Message


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ API
async def get_form_responses(form_id: str) -> dict:
    """–ü–æ–ª—É—á–∞–µ—Ç –æ—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º—ã —á–µ—Ä–µ–∑ API"""
    url = f"https://test.upmini.app/api/forms/{form_id}/responses"
    
    try:
        async with aiohttp.ClientSession() as session:
            async with session.get(url) as response:
                if response.status == 200:
                    return await response.json()
                else:
                    raise Exception(f"API –≤–µ—Ä–Ω—É–ª —Å—Ç–∞—Ç—É—Å {response.status}")
    except Exception as e:
        raise Exception(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –∫ API: {str(e)}")


# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ Excel —Ñ–∞–π–ª–∞ —Å –æ—Ç–≤–µ—Ç–∞–º–∏
def generate_excel_file(responses_data: dict, form_id: str) -> str:
    """–ì–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç Excel —Ñ–∞–π–ª —Å –æ—Ç–≤–µ—Ç–∞–º–∏ —Ñ–æ—Ä–º—ã"""
    wb = Workbook()
    ws = wb.active
    ws.title = f"Responses_{form_id[:8]}"
    
    # –°–æ–±–∏—Ä–∞–µ–º –≤—Å–µ —É–Ω–∏–∫–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏ –∏–∑ –≤—Å–µ—Ö –æ—Ç–≤–µ—Ç–æ–≤
    all_keys = set()
    for response in responses_data.get('responses', []):
        if 'response_data' in response:
            all_keys.update(response['response_data'].keys())
    
    all_keys = sorted(list(all_keys))
    
    # –ó–∞–≥–æ–ª–æ–≤–∫–∏
    headers = ['ID', 'Form ID', 'Created At'] + all_keys
    for col, header in enumerate(headers, 1):
        cell = ws.cell(row=1, column=col, value=header)
        cell.font = Font(bold=True)
        cell.fill = PatternFill(start_color="CCCCCC", end_color="CCCCCC", fill_type="solid")
    
    # –î–∞–Ω–Ω—ã–µ
    for row, response in enumerate(responses_data.get('responses', []), 2):
        ws.cell(row=row, column=1, value=response.get('id', ''))
        ws.cell(row=row, column=2, value=response.get('form_id', ''))
        ws.cell(row=row, column=3, value=response.get('created_at', ''))
        
        # –ó–∞–ø–æ–ª–Ω—è–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ç–≤–µ—Ç–æ–≤
        response_data = response.get('response_data', {})
        for col, key in enumerate(all_keys, 4):
            value = response_data.get(key, '')  # –ü—É—Å—Ç–∞—è —è—á–µ–π–∫–∞ –µ—Å–ª–∏ –∫–ª—é—á–∞ –Ω–µ—Ç
            ws.cell(row=row, column=col, value=value)
    
    # –ê–≤—Ç–æ–ø–æ–¥–±–æ—Ä —à–∏—Ä–∏–Ω—ã –∫–æ–ª–æ–Ω–æ–∫
    for column in ws.columns:
        max_length = 0
        column_letter = column[0].column_letter
        for cell in column:
            try:
                if len(str(cell.value)) > max_length:
                    max_length = len(str(cell.value))
            except:
                pass
        adjusted_width = min(max_length + 2, 50)
        ws.column_dimensions[column_letter].width = adjusted_width
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ñ–∞–π–ª
    filename = f"form_responses_{form_id[:8]}_{datetime.now().strftime('%Y%m%d_%H%M%S')}.xlsx"
    filepath = f"/tmp/{filename}"
    wb.save(filepath)
    return filepath


# –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏ –∫–æ–º–∞–Ω–¥—ã /form_res
async def handle_form_res_command(message: Message):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–æ–º–∞–Ω–¥—ã /form_res –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–æ–≤ —Ñ–æ—Ä–º—ã"""
    try:
        # –ò–∑–≤–ª–µ–∫–∞–µ–º form_id –∏–∑ –∫–æ–º–∞–Ω–¥—ã
        command_parts = message.text.split()
        if len(command_parts) != 2:
            await message.answer(
                "‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –∫–æ–º–∞–Ω–¥—ã. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ: /form_res <form_id>\n"
                "–ü—Ä–∏–º–µ—Ä: /form_res 0f913c81-cc46-42cd-9a0b-8458a8da2a2a"
            )
            return
        
        form_id = command_parts[1]
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ form_id –≤—ã–≥–ª—è–¥–∏—Ç –∫–∞–∫ UUID
        try:
            uuid.UUID(form_id)
        except ValueError:
            await message.answer("‚ùå –ù–µ–≤–µ—Ä–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç UUID. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å form_id.")
            return
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
        processing_msg = await message.answer("‚è≥ –ü–æ–ª—É—á–∞—é –æ—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º—ã...")
        
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ —Å API
            responses_data = await get_form_responses(form_id)
            
            if not responses_data.get('responses'):
                await processing_msg.edit_text("‚ùå –û—Ç–≤–µ—Ç—ã –¥–ª—è –¥–∞–Ω–Ω–æ–π —Ñ–æ—Ä–º—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
                return
            
            # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ
            await processing_msg.edit_text("üìä –ì–µ–Ω–µ—Ä–∏—Ä—É—é Excel —Ñ–∞–π–ª...")
            
            # –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º Excel —Ñ–∞–π–ª
            excel_filepath = generate_excel_file(responses_data, form_id)
            
            # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ñ–∞–π–ª –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é
            excel_file = FSInputFile(excel_filepath)
            await message.answer_document(
                document=excel_file,
                caption=f"üìã –û—Ç–≤–µ—Ç—ã —Ñ–æ—Ä–º—ã {form_id[:8]}...\n"
                       f"–í—Å–µ–≥–æ –æ—Ç–≤–µ—Ç–æ–≤: {responses_data.get('total', 0)}"
            )
            
            # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—ã–π —Ñ–∞–π–ª
            try:
                os.remove(excel_filepath)
            except:
                pass
                
            await processing_msg.delete()
            
        except Exception as e:
            await processing_msg.edit_text(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {str(e)}")
            
    except Exception as e:
        await message.answer(f"‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}")
